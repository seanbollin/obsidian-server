---
- hosts: servers
  remote_user: root

  tasks:
  - name: Set facts
    set_fact:
      build_dir: /home/server/obsidian-server/build

  - name: ensure git is installed
    apt: name=git state=present

  - name: ensure server group exists
    group: name=server
  
  - name: ensure server user exists
    user: name=server group=server 

  - name: update repositories cache and install "python-pip" package
    apt: name=python-pip update_cache=yes

  - name: install cmake
    apt: name=cmake

  - name: install conan
    pip: name=conan

  - name: install g++
    apt: name=g++

  - name: install make
    apt: name=make

  - name: install obsidian-server systemd unit file
    template: src=obsidian-server.j2 dest=/etc/systemd/system/obsidian-server.service

  - name: blow away previous git clone
    file: path=/home/server/obsidian-server state=absent

  - name: checkout obsidian-server repo from github
    become: yes
    become_user: server
    git: repo=ssh://git@github.com/seanbollin/obsidian-server.git key_file=/home/server/.ssh/id_rsa accept_hostkey=yes dest=/home/server/obsidian-server update=yes

  - name: create build dir
    file: path={{ build_dir }} state=directory owner=server group=server

  - name: install dependencies with conan
    command: conan install ..
    args:
      chdir: {{ build_dir }}
    become: yes
    become_user: server

  - name: run cmake
    command: cmake ..
    args:
      chdir: {{ build_dir }}
    become: yes
    become_user: server

  - name: Create swap space
    command: dd if=/dev/zero of=/var/swap.img bs=1024k count=1000
    when: ansible_swaptotal_mb < 1

  - name: Make swap
    command: mkswap /var/swap.img
    when: ansible_swaptotal_mb < 1

  - name: Turn swap on
    command: swapon /var/swap.img
    when: ansible_swaptotal_mb < 1

  - name: make cpplint
    make: chdir={{ build_dir }} target=cpplint
    become: yes
    become_user: server

  - name: make
    make: chdir={{ build_dir }}
    become: yes
    become_user: server

  - name: Run tests
    command: ctest
    args:
      chdir: "{{ build_dir }}"

  - name: place binary in final folder
    copy: src={{ build_dir }}/bin/obsidian-server remote_src=yes dest=/usr/local/bin/obsidian-server owner=server group=server mode=0760 backup=yes

  - name: start server
    systemd: daemon_reload=yes state=restarted name=obsidian-server
